image: docker:latest
services:
  - docker:dind

stages:
  - build
  - package
  - post-package

variables:
  CONTAINER_IMAGE: registry.gitlab.com/$CI_PROJECT_PATH
  MAVEN_OPTS: "-Dmaven.repo.local=./.m2/repository"


cache:
  paths:
    - ./.m2/repository
  # keep cache across branch
  key: "$CI_BUILD_REF_NAME"

maven-dependency-check:
  image: maven:3-jdk-8
  stage: build
  before_script:
    - ping -c 3 www.google.com
  script:
    - "mvn $MAVEN_OPTS $DEPENDENCY_CHECK_PLUGIN -Dformat=ALL"

maven-build:
  image: maven:3-jdk-8
  stage: build
  before_script:
    - ping -c 3 www.google.com
  script:
    - "mvn install $MAVEN_OPTS $SONAR_PLUGIN $SONAR_OPTIONS -Dsonar.login=$SONAR_ANALYZE_TOKEN"
    # print coverage in console so that gitlab can pick it up
    #- awk -F"," '{ instructions += $4 + $5; covered += $5 } END { print covered, "/", instructions, " instructions covered"; print 100*covered/instructions, "% covered" }' target/site/jacoco/jacoco1.csv

  #  - "mvn clean install pitest:mutationCoverage"
  # Gitlab coverage regex: mutations Killed [0-9].* \((.*?)%\)
  artifacts:
    paths:
      - target/*

docker-build:
  stage: package
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN registry.gitlab.com
  script:
    - "docker build -f Dockerfile -t $CONTAINER_IMAGE:latest ."
    - "docker push $CONTAINER_IMAGE:latest"


slack-success:
  only:
    - develop
  stage: post-package
  image: appropriate/curl
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Organization service deployed to develop :star2:\"}' https://hooks.slack.com/services/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"

slack-failed:
  only:
    - develop
  stage: post-package
  when: on_failure
  image: appropriate/curl
  script:
    - "curl -X POST -H 'Content-type: application/json' --data '{\"text\":\"Failed to deploy organization service to develop :boom:\"}' https://hooks.slack.com/services/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"
